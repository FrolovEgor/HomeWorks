using System;
using System.Collections.Generic;

namespace HomeWork_8
{
    class Program
    {

        static int Fu(int N) 
        {

            for (int i=2; i <= N/2; i++)           
            {
                if (N % i == 0) return 0;
            }
            return 1;
        }

        [STAThread]
        static void Main(string[] args)
        {
            //DateTime YY = DateTime.Now;
            //int Nt = 0;
            
            //for (int i = 2; i < 250001; i++) 
            //{   
            //    Nt += Fu(i);
            //}

            //Console.WriteLine(Nt);
            
            //TimeSpan OO = DateTime.Now - YY;
            //Console.WriteLine(OO);
            //Console.ReadKey();



            List<Worker> workers = new List<Worker>();

            for (int i = 0; i < 15; i++) 
            {
                workers.Add(new Worker(i+10, "dep","ss",99,"afsaf",10000));
                Console.WriteLine(workers[i].ToString());
            }
            int index = 14;
            int index2 = workers.FindIndex(x => x.Worker_ID == index);

            Console.WriteLine(index2);

            Console.ReadKey();



            ////Объявление базового департамента со стандартным именем
            //Department department = new Department("Организация"); ;

            ////Флаг входа (для выхода из программы при любой вложенности)
            //bool exit = false;

            ////Вызов меню для базового департамента
            //new Menu(department).StartMenu(true, out exit);


        }
    }
}

//Создайте прототип информационной системы для организации.

//Организация состоит из департаментов. В департаментах работают сотрудники. Помимо этого, каждый департамент содержит вложенные департаменты, в которых
//также работают сотрудники, и так далее. Уровень вложенности департаментов не ограничен, однако каждый отдельно взятый департамент может содержать
//только до миллиона сотрудников.

//Пользователь информационной системы может добавлять, удалять и редактировать департаменты.
//пунктов меню.

//Все данные организации можно сохранить на диск в форматах JSON или XML.



//Что оценивается
//Создана структура для департамента.
//Создана структура для сотрудника.
//Департамент обладает как минимум следующими полями:
//Наименование.
//Дата создания.
//Количество сотрудников.
//Сотрудник обладает как минимум следующими полями:
//Фамилия.
//Имя.
//Возраст.
//Департамент, в котором он работает.
//Идентификатор.
//Размер заработной платы.
//Сотрудников и департаменты можно добавлять, удалять и редактировать.
//Производится сортировка по произвольному полю.
//Реализовано меню.

